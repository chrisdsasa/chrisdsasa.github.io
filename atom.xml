<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://chrisdsasa.github.io/atom.xml" rel="self"/>
  
  <link href="http://chrisdsasa.github.io/"/>
  <updated>2023-12-30T07:04:51.276Z</updated>
  <id>http://chrisdsasa.github.io/</id>
  
  <author>
    <name>Chris Krypoto Zhao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nmap_conf_1</title>
    <link href="http://chrisdsasa.github.io/2022/08/10/NmapConfig/"/>
    <id>http://chrisdsasa.github.io/2022/08/10/NmapConfig/</id>
    <published>2022-08-10T13:13:09.000Z</published>
    <updated>2023-12-30T07:04:51.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h2><ul><li>open，端口开放;</li><li>filtered，端口被防火墙或安全软件阳止了，也可能是网络堵塞：</li><li>closed. 端口关闭。</li></ul><p>###防火墙后门</p><ul><li>﻿PS 选项来实施 TCP SYN ping 可绕过防火墙</li><li>﻿PA 这种类型的扫描将只会扫描 ACK 包，可绕过防火墙</li><li>﻿PU 扫描只会对目标进行 udp ping 扫描。这种类型的扫描会发送 UDP 包来获取一个响应，可绕过防火墙</li><li>﻿PP 选项进行一个 ICMP 时间戳 ping 扫描，可绕过防火墙</li><li>﻿PE 参数进行一个 IEMP(Internet 控制报文协议)在指定的系统上输出 ping，可绕防火墙</li><li>﻿Pn 不采用ping 方式进行扫描，可绕过防火墙。</li><li>﻿SA 用于发现防火墙规则，比如扫到的端口是过滤的，那么可以使用这个参数进行绕过。<br>如果可以访问目标 80 端口，但nmap 扫描却没有结果 （很大可能是有防火墙过滤的情况）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;NMAP&quot;&gt;&lt;a href=&quot;#NMAP&quot; class=&quot;headerlink&quot; title=&quot;NMAP&quot;&gt;&lt;/a&gt;NMAP&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;open，端口开放;&lt;/li&gt;
&lt;li&gt;filtered，端口被防火墙或安全软件阳止了，也可能是网络堵塞：&lt;/l</summary>
      
    
    
    
    <category term="Hack" scheme="http://chrisdsasa.github.io/categories/Hack/"/>
    
    
    <category term="Kali Chinese" scheme="http://chrisdsasa.github.io/tags/Kali-Chinese/"/>
    
  </entry>
  
  <entry>
    <title>kali_linux_conf</title>
    <link href="http://chrisdsasa.github.io/2022/08/05/kaliNetWorkConfig/"/>
    <id>http://chrisdsasa.github.io/2022/08/05/kaliNetWorkConfig/</id>
    <published>2022-08-05T14:01:56.000Z</published>
    <updated>2023-12-30T07:26:10.418Z</updated>
    
    <content type="html"><![CDATA[<h2 id="kali-linux-网络-远程配置"><a href="#kali-linux-网络-远程配置" class="headerlink" title="kali linux 网络&amp;远程配置"></a>kali linux 网络&amp;远程配置</h2><h3 id="改源"><a href="#改源" class="headerlink" title="改源"></a>改源</h3><p>打开conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>##修改国内源（阿里）</p><h3 id="二进制包"><a href="#二进制包" class="headerlink" title="二进制包"></a>二进制包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.aliyun.com/kali kali-rolling main contirb on-free</span><br></pre></td></tr></table></figure><h3 id="源码包"><a href="#源码包" class="headerlink" title="源码包"></a>源码包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb-src https://mirrors.aliyun.com/kali kali-rolling main contirb on-free</span><br></pre></td></tr></table></figure><h3 id="ssh-sshd"><a href="#ssh-sshd" class="headerlink" title="ssh &amp; sshd"></a>ssh &amp; sshd</h3><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="net-discover"><a href="#net-discover" class="headerlink" title="net-discover"></a>net-discover</h3><ul><li>向内网上的每台设备发送广播</li><li>广播 FF:FF:FF:FF</li><li>广播自己mac 地址 与 内网 上的主机互换地址</li></ul><p>###案例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -i eth0 -r 255.255.0.0/16</span><br></pre></td></tr></table></figure><ul><li>255 二进制 <code>11111111.11111111.00000000.00000000</code> 16个1 掩码为 16</li></ul><p>###主动</p><ul><li><code>0.0.0.0</code> 为你家路由器的地址 通常以 .1 &amp; .0</li><li>16 为掩码 <code>掩码</code> &#x3D; <code>ip</code> 地址 <code>二进制</code> 里 1的个数</li><li>i主动嗅探模式 向目标ip发送 mac 广播</li></ul><h3 id="被动"><a href="#被动" class="headerlink" title="被动"></a>被动</h3><ul><li>-p 为被动模式 不会进行广播</li><li>在局域网嗅探其他主机的广播</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;kali-linux-网络-远程配置&quot;&gt;&lt;a href=&quot;#kali-linux-网络-远程配置&quot; class=&quot;headerlink&quot; title=&quot;kali linux 网络&amp;amp;远程配置&quot;&gt;&lt;/a&gt;kali linux 网络&amp;amp;远程配置&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="pene" scheme="http://chrisdsasa.github.io/categories/pene/"/>
    
    
    <category term="kali" scheme="http://chrisdsasa.github.io/tags/kali/"/>
    
    <category term="Mac Os" scheme="http://chrisdsasa.github.io/tags/Mac-Os/"/>
    
    <category term="Chinese" scheme="http://chrisdsasa.github.io/tags/Chinese/"/>
    
  </entry>
  
  <entry>
    <title>wifipineapple</title>
    <link href="http://chrisdsasa.github.io/2021/06/22/WifiPineapple/"/>
    <id>http://chrisdsasa.github.io/2021/06/22/WifiPineapple/</id>
    <published>2021-06-22T05:58:27.000Z</published>
    <updated>2023-12-30T07:26:45.327Z</updated>
    
    <content type="html"><![CDATA[<h2 id="wifipineapple"><a href="#wifipineapple" class="headerlink" title="wifipineapple"></a>wifipineapple</h2><h3 id="首次登陆"><a href="#首次登陆" class="headerlink" title="首次登陆"></a>首次登陆</h3><p>联上菠萝wifi（通常为： wifipineapple_…）<br><code>CREATE TABLE</code> 首次登陆网址并注册root账户：</p><p>并创建ssid</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://172.16.42.1:1471/</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：一定要输入端口否则登入不了：</p><ul><li><code>端口</code>：1471</li></ul><h3 id="扩展容量"><a href="#扩展容量" class="headerlink" title="扩展容量"></a>扩展容量</h3><p>wifi pineapple 自带的ROM很小建议买一个扩展。</p><ul><li><code>USB</code> usb扩展接口可以买 <code>sandisk</code> 建议： sandisk的CZ430</li><li>如果有 <code>micro sd</code> 或 <code>tf</code> 卡槽也可以使用sd卡</li></ul><h3 id="登陆菠萝终端"><a href="#登陆菠萝终端" class="headerlink" title="登陆菠萝终端"></a>登陆菠萝终端</h3><p>（依靠支持ssh协议的软件 推荐：xshell）：</p><h3 id="xshell-免费下载"><a href="#xshell-免费下载" class="headerlink" title="xshell 免费下载"></a>xshell 免费下载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.xshell.com/zh/free-for-home-school/</span><br></pre></td></tr></table></figure><p>完全免费而功能齐全 无阉割</p><h3 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h3><p>在xshell 新建一个主机</p><ul><li><code>IPV4</code>： 172.16.42.1</li><li><code>user</code>： root<br>即可连接</li></ul><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sd.sh</span><br></pre></td></tr></table></figure><p>查看ROM挂载：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sd -h</span><br></pre></td></tr></table></figure><ul><li>&#x2F;dev&#x2F;sda1 就是你新的ROM</li></ul><h2 id="安装-models"><a href="#安装-models" class="headerlink" title="安装 models"></a>安装 models</h2><h3 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h3><p>添加网路 可以使用任意一张网卡推荐wlan1</p><p>在左侧菜单栏里的Networking中的AP（Access Point）</p><h3 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h3><ul><li>在wifi cilent mode 里interface 选择一张网卡 </li><li>然后在SSID 选择自己家的网输入密码</li></ul><p><strong>warning</strong> 想要在hak5的社区上下载models需要连接<code>代理服务器</code></p><p>以后会更新models的教程</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;wifipineapple&quot;&gt;&lt;a href=&quot;#wifipineapple&quot; class=&quot;headerlink&quot; title=&quot;wifipineapple&quot;&gt;&lt;/a&gt;wifipineapple&lt;/h2&gt;&lt;h3 id=&quot;首次登陆&quot;&gt;&lt;a href=&quot;#首次登陆&quot;</summary>
      
    
    
    
    <category term="pene" scheme="http://chrisdsasa.github.io/categories/pene/"/>
    
    
    <category term="wifi" scheme="http://chrisdsasa.github.io/tags/wifi/"/>
    
    <category term="hak5" scheme="http://chrisdsasa.github.io/tags/hak5/"/>
    
    <category term="cracking" scheme="http://chrisdsasa.github.io/tags/cracking/"/>
    
  </entry>
  
  <entry>
    <title>morse_cry_cn</title>
    <link href="http://chrisdsasa.github.io/2021/05/21/MouseCn/"/>
    <id>http://chrisdsasa.github.io/2021/05/21/MouseCn/</id>
    <published>2021-05-21T01:25:08.000Z</published>
    <updated>2023-12-30T07:05:41.453Z</updated>
    
    <content type="html"><![CDATA[<pre><code>今天带大家学习一到 crypto 密码学的一道题（来自xctf 的crypto的 morse）破解这个密码11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10        110第一步 从名字来分析课可以知道这是摩斯密码所以先把它转成摩斯密码， 空格分离。1代表_ 0是.wo you献上python代码（也可以找线上的网站）bin = input(&quot;binary&quot;)morse = bin.replace(&quot;1&quot;,&quot;-&quot;).replace(&quot;0&quot;,&quot;.&quot;)print(morse)得到-- --- .-. ... . -.-. --- -.. . .. ... ... --- .. -. - . .-. . ... - .. -. --.接下来编码摩斯密码是用_和.不同排列组合代表不同的字母。摩斯密码表：A：·—B：—···C：—·—·D：—··E：·F：··—·G：——·H：····I：··J：·———K：—·—L：·—··M：——N：—· O：———P：·——· Q：——·— R：·—·S：···T：—U：··—V：···— W：·——X：—··—Y：—·——Z：——··m = &#123;&#39;a&#39;: &#39;.-&#39;, &#39;b&#39;: &#39;-...&#39;, &#39;c&#39;: &#39;-.-.&#39;, &#39;d&#39;: &#39;-..&#39;, &#39;e&#39;: &#39;.&#39;,&#39;f&#39;: &#39;..-.&#39;, &#39; g&#39;: &#39;--.&#39;, &#39; h&#39;: &#39;....&#39;, &#39; i&#39;: &#39;..&#39;, &#39; j&#39;: &#39;.---&#39;,&#39;k&#39;: &#39;-.-&#39;, &#39; l&#39;: &#39;.-..&#39;, &#39; m&#39;: &#39;--&#39;, &#39;n&#39;: &#39;-.&#39;, &#39; o&#39;: &#39;---&#39;,&#39;p&#39;: &#39;.--.&#39;, &#39; q&#39;: &#39;--.-&#39;, &#39; r&#39;: &#39;.-.&#39;, &#39; s&#39;: &#39;...&#39;, &#39; t&#39;: &#39;-&#39;,&#39;u&#39;: &#39;..-&#39;, &#39; v&#39;: &#39;...-&#39;, &#39; w&#39;: &#39;.--&#39;, &#39; x&#39;: &#39;-..-&#39;, &#39; y&#39;: &#39;-.--&#39;, &#39; z&#39;: &#39;--..&#39;,&#39;0&#39;: &#39;-----&#39;, &#39;1&#39;: &#39;.----&#39;, &#39; 2&#39;: &#39;..---&#39;, &#39; 3&#39;: &#39;...--&#39;, &#39; 4&#39;: &#39;....-&#39;,&#39;5&#39;: &#39;.....&#39;, &#39; 6&#39;: &#39;-....&#39;, &#39; 7&#39;: &#39;--...&#39;, &#39; 8&#39;: &#39;---..&#39;, &#39; 9&#39;: &#39;----.&#39;&#125;text = input()morse_ key = text. strip(). split(&quot; &quot;)w = [m[key] for key in morse_ key]w = &quot;&quot;. join(w)print(plain_text)最后得到 morseissointeretingps: 不知道为什么不能打括号代码大家自己理解chris jiace zhao封面图片由chris_jiace_zhao（Dalian）</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;今天带大家学习一到 crypto 密码学的一道题（来自xctf 的crypto的 morse）
破解这个密码
11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10</summary>
      
    
    
    
    <category term="cryption" scheme="http://chrisdsasa.github.io/categories/cryption/"/>
    
    
    <category term="morse Chinese" scheme="http://chrisdsasa.github.io/tags/morse-Chinese/"/>
    
  </entry>
  
  <entry>
    <title>morse_cry_en</title>
    <link href="http://chrisdsasa.github.io/2021/01/21/MouseEn/"/>
    <id>http://chrisdsasa.github.io/2021/01/21/MouseEn/</id>
    <published>2021-01-21T01:25:08.000Z</published>
    <updated>2023-12-30T07:04:49.920Z</updated>
    
    <content type="html"><![CDATA[<p>Today, I’ll take you to a topic of crypto Cryptography (Morse of crypto from xctf)<br>Crack this password<br>11 111 010 000 0 1010 111 100 0 00 000 000 111 00 10 1 0 010 0 000 1 00 10 110<br>The first step is to analyze the class from the name. You can know that this is the Morse code, so first turn it into the Morse code and separate the spaces. 1 representative_ 0 yes wo you<br>Offer Python code (you can also find online websites)<br>bin &#x3D; input(“binary”)<br>morse &#x3D; bin. replace(“1”,”-“). replace(“0”,”.”)<br>print(morse)<br>Get —-…. –…. –…. –…. –…. –…. –…. –<br>Next code<br>Morse code is used_ And Different permutations represent different letters. Morse password table:<br>A：·—<br>B：—···<br>C：—·—·<br>D：—··<br>E：·<br>F：··—·<br>G：——·<br>H：····<br>I：··<br>J：·———<br>K：—·—<br>L：·—··<br>M：——<br>N：—·<br>O：———<br>P：·——·<br>Q：——·—<br>R：·—·<br>S：···<br>T：—<br>U：··—<br>V：···—<br>W：·——<br>X：—··—<br>Y：—·——<br>Z：——··<br>m &#x3D; {‘a’: ‘.-‘, ‘b’: ‘-…’, ‘c’: ‘-.-.’, ‘d’: ‘-..’, ‘e’: ‘.’,<br>‘f’: ‘..-.’, ‘ g’: ‘–.’, ‘ h’: ‘….’, ‘ i’: ‘..’, ‘ j’: ‘.—‘,<br>‘k’: ‘-.-‘, ‘ l’: ‘.-..’, ‘ m’: ‘–’, ‘n’: ‘-.’, ‘ o’: ‘—‘,<br>‘p’: ‘.–.’, ‘ q’: ‘–.-‘, ‘ r’: ‘.-.’, ‘ s’: ‘…’, ‘ t’: ‘-‘,<br>‘u’: ‘..-‘, ‘ v’: ‘…-‘, ‘ w’: ‘.–’, ‘ x’: ‘-..-‘, ‘ y’: ‘-.–’, ‘ z’: ‘–..’,<br>‘0’: ‘—–’, ‘1’: ‘.—-‘, ‘ 2’: ‘..—‘, ‘ 3’: ‘…–’, ‘ 4’: ‘….-‘,<br>‘5’: ‘…..’, ‘ 6’: ‘-….’, ‘ 7’: ‘–…’, ‘ 8’: ‘—..’, ‘ 9’: ‘—-.’<br>}<br>text &#x3D; input()<br>morse_ key &#x3D; text. strip(). split(“ “)<br>w &#x3D; [m[key] for key in morse_ key]<br>w &#x3D; “”. join(w)<br>print(plain_text)<br>Finally, morseissointereting is obtained<br>PS: I don’t know why you can’t put parentheses in the code. You can understand it yourself<br>chris jiace zhao<br>Cover picture by Chris_ jiace_ zhao（Dalian）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Today, I’ll take you to a topic of crypto Cryptography (Morse of crypto from xctf)&lt;br&gt;Crack this password&lt;br&gt;11 111 010 000 0 1010 111 10</summary>
      
    
    
    
    <category term="cryption" scheme="http://chrisdsasa.github.io/categories/cryption/"/>
    
    
    <category term="morse English" scheme="http://chrisdsasa.github.io/tags/morse-English/"/>
    
  </entry>
  
</feed>
